#include <nanobind/nanobind.h>

namespace ompl::binding::base
{
    void initAtlasChart(nanobind::module_& m);
    void initAtlasStateSpace(nanobind::module_& m);
    void initBridgeTestValidStateSampler(nanobind::module_& m);
    void initConditionalStateSampler(nanobind::module_& m);
    void initConstrainedSpaceInformation(nanobind::module_& m);
    void initConstrainedStateSpace(nanobind::module_& m);
    void initConstraint(nanobind::module_& m);
    void initControlDurationObjective(nanobind::module_& m);
    void initCost(nanobind::module_& m);
    void initCostConvergenceTerminationCondition(nanobind::module_& m);
    void initDeterministicSequence(nanobind::module_& m);
    void initDeterministicStateSampler(nanobind::module_& m);
    void initDiscreteMotionValidator(nanobind::module_& m);
    void initDiscreteStateSpace(nanobind::module_& m);
    void initDubinsStateSpace(nanobind::module_& m);
    void initEmptyStateSpace(nanobind::module_& m);
    void initGaussianValidStateSampler(nanobind::module_& m);
    void initGenericParam(nanobind::module_& m);
    void initGoal(nanobind::module_& m);
    void initGoalLazySamples(nanobind::module_& m);
    void initGoalRegion(nanobind::module_& m);
    void initGoalSampleableRegion(nanobind::module_& m);
    void initGoalSpace(nanobind::module_& m);
    void initGoalState(nanobind::module_& m);
    void initGoalStates(nanobind::module_& m);
    void initGoalTypes(nanobind::module_& m);
    void initHaltonSequence(nanobind::module_& m);
    void initInformedStateSampler(nanobind::module_& m);
    void initIterationTerminationCondition(nanobind::module_& m);
    void initKleinBottleStateSpace(nanobind::module_& m);
    void initMaximizeClearanceValidStateSampler(nanobind::module_& m);
    void initMaximizeMinClearanceObjective(nanobind::module_& m);
    void initMechanicalWorkOptimizationObjective(nanobind::module_& m);
    void initMinimaxObjective(nanobind::module_& m);
    void initMinimizeArrivalTime(nanobind::module_& m);
    void initMinimumClearanceValidStateSampler(nanobind::module_& m);
    void initMobiusStateSpace(nanobind::module_& m);
    void initMotionValidator(nanobind::module_& m);
    void initObstacleBasedValidStateSampler(nanobind::module_& m);
    void initOptimizationObjective(nanobind::module_& m);
    void initOrderedInfSampler(nanobind::module_& m);
    void initPath(nanobind::module_& m);
    void initPathLengthDirectInfSampler(nanobind::module_& m);
    void initPathLengthOptimizationObjective(nanobind::module_& m);
    void initPlanner(nanobind::module_& m);
    void initPlannerData(nanobind::module_& m);
    void initPlannerDataGraph(nanobind::module_& m);
    void initPlannerDataStorage(nanobind::module_& m);
    void initPlannerStatus(nanobind::module_& m);
    void initPlannerTerminationCondition(nanobind::module_& m);
    void initPrecomputedSequence(nanobind::module_& m);
    void initPrecomputedStateSampler(nanobind::module_& m);
    void initProblemDefinition(nanobind::module_& m);
    void initProjectedStateSpace(nanobind::module_& m);
    void initProjectionEvaluator(nanobind::module_& m);
    void initRealVectorBounds(nanobind::module_& m);
    void initRealVectorStateProjections(nanobind::module_& m);
    void initRealVectorStateSpace(nanobind::module_& m);
    void initReedsSheppStateSpace(nanobind::module_& m);
    void initRejectionInfSampler(nanobind::module_& m);
    void initSE2StateSpace(nanobind::module_& m);
    void initSE3StateSpace(nanobind::module_& m);
    void initSO2StateSpace(nanobind::module_& m);
    void initSO3StateSpace(nanobind::module_& m);
    void initScopedState(nanobind::module_& m);
    void initSolutionNonExistenceProof(nanobind::module_& m);
    void initSpaceInformation(nanobind::module_& m);
    void initSpaceTimeStateSpace(nanobind::module_& m);
    void initSphereStateSpace(nanobind::module_& m);
    void initState(nanobind::module_& m);
    void initStateCostIntegralObjective(nanobind::module_& m);
    void initStateSampler(nanobind::module_& m);
    void initStateSamplerArray(nanobind::module_& m);
    void initStateSpace(nanobind::module_& m);
    void initStateSpaceTypes(nanobind::module_& m);
    void initStateStorage(nanobind::module_& m);
    void initStateValidityChecker(nanobind::module_& m);
    void initTangentBundleStateSpace(nanobind::module_& m);
    void initTimeStateSpace(nanobind::module_& m);
    void initTorusStateSpace(nanobind::module_& m);
    void initTypedSpaceInformation(nanobind::module_& m);
    void initTypedStateValidityChecker(nanobind::module_& m);
    void initUniformValidStateSampler(nanobind::module_& m);
    void initVFMechanicalWorkOptimizationObjective(nanobind::module_& m);
    void initVFUpstreamCriterionOptimizationObjective(nanobind::module_& m);
    void initValidStateSampler(nanobind::module_& m);
    void initWrapperStateSpace(nanobind::module_& m);
}  // namespace ompl::binding::base
