#include <nanobind/nanobind.h>

namespace ompl::binding::geometric
{
    void initABITstar(nanobind::module_& m);
    void initAITstar(nanobind::module_& m);
    void initAnytimePathShortening(nanobind::module_& m);
    void initBFMT(nanobind::module_& m);
    void initBITstar(nanobind::module_& m);
    void initBKPIECE1(nanobind::module_& m);
    void initBiEST(nanobind::module_& m);
    void initBiRLRT(nanobind::module_& m);
    void initBiTRRT(nanobind::module_& m);
    void initCForest(nanobind::module_& m);
    void initCForestStateSampler(nanobind::module_& m);
    void initCForestStateSpaceWrapper(nanobind::module_& m);
    void initConnectionStrategy(nanobind::module_& m);
    void initCostHelper(nanobind::module_& m);
    void initDirection(nanobind::module_& m);
    void initDiscretization(nanobind::module_& m);
    void initEIRMstar(nanobind::module_& m);
    void initEITstar(nanobind::module_& m);
    void initEST(nanobind::module_& m);
    void initEdge(nanobind::module_& m);
    void initEdge(nanobind::module_& m);
    void initFMT(nanobind::module_& m);
    void initForwardQueue(nanobind::module_& m);
    void initGeneticSearch(nanobind::module_& m);
    void initHelperFunctions(nanobind::module_& m);
    void initHillClimbing(nanobind::module_& m);
    void initIdGenerator(nanobind::module_& m);
    void initImplicitGraph(nanobind::module_& m);
    void initImplicitGraph(nanobind::module_& m);
    void initInformedRRTstar(nanobind::module_& m);
    void initKPIECE1(nanobind::module_& m);
    void initLBKPIECE1(nanobind::module_& m);
    void initLBTRRT(nanobind::module_& m);
    void initLazyLBTRRT(nanobind::module_& m);
    void initLazyPRM(nanobind::module_& m);
    void initLazyPRMstar(nanobind::module_& m);
    void initLazyRRT(nanobind::module_& m);
    void initLightningRetrieveRepair(nanobind::module_& m);
    void initPDST(nanobind::module_& m);
    void initPRM(nanobind::module_& m);
    void initPRMstar(nanobind::module_& m);
    void initPathGeometric(nanobind::module_& m);
    void initPathHybridization(nanobind::module_& m);
    void initPathSimplifier(nanobind::module_& m);
    void initPlannerIncludes(nanobind::module_& m);
    void initProjEST(nanobind::module_& m);
    void initQueuetypes(nanobind::module_& m);
    void initRLRT(nanobind::module_& m);
    void initRRT(nanobind::module_& m);
    void initRRTConnect(nanobind::module_& m);
    void initRRTXstatic(nanobind::module_& m);
    void initRRTsharp(nanobind::module_& m);
    void initRRTstar(nanobind::module_& m);
    void initRandomGeometricGraph(nanobind::module_& m);
    void initReverseQueue(nanobind::module_& m);
    void initSBL(nanobind::module_& m);
    void initSORRTstar(nanobind::module_& m);
    void initSPARS(nanobind::module_& m);
    void initSPARStwo(nanobind::module_& m);
    void initSST(nanobind::module_& m);
    void initSTRIDE(nanobind::module_& m);
    void initSTRRTstar(nanobind::module_& m);
    void initSearchQueue(nanobind::module_& m);
    void initSimpleSetup(nanobind::module_& m);
    void initState(nanobind::module_& m);
    void initTRRT(nanobind::module_& m);
    void initTSRRT(nanobind::module_& m);
    void initThunderRetrieveRepair(nanobind::module_& m);
    void initVFRRT(nanobind::module_& m);
    void initVertex(nanobind::module_& m);
    void initVertex(nanobind::module_& m);
    void initVertex(nanobind::module_& m);
    void initXXL(nanobind::module_& m);
    void initXXLDecomposition(nanobind::module_& m);
    void initXXLPlanarDecomposition(nanobind::module_& m);
    void initXXLPositionDecomposition(nanobind::module_& m);
    void initpRRT(nanobind::module_& m);
    void initpSBL(nanobind::module_& m);
}  // namespace ompl::binding::geometric
