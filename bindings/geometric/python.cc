#include "init.hh"

namespace ob = ompl::binding::geometric;

NB_MODULE(_geometric, m)
{
    ob::initABITstar(m);
    ob::initAITstar(m);
    ob::initAnytimePathShortening(m);
    ob::initBFMT(m);
    ob::initBITstar(m);
    ob::initBKPIECE1(m);
    ob::initBiEST(m);
    ob::initBiRLRT(m);
    ob::initBiTRRT(m);
    ob::initCForest(m);
    ob::initCForestStateSampler(m);
    ob::initCForestStateSpaceWrapper(m);
    ob::initConnectionStrategy(m);
    ob::initCostHelper(m);
    ob::initDirection(m);
    ob::initDiscretization(m);
    ob::initEIRMstar(m);
    ob::initEITstar(m);
    ob::initEST(m);
    ob::initEdge(m);
    ob::initEdge(m);
    ob::initFMT(m);
    ob::initForwardQueue(m);
    ob::initGeneticSearch(m);
    ob::initHelperFunctions(m);
    ob::initHillClimbing(m);
    ob::initIdGenerator(m);
    ob::initImplicitGraph(m);
    ob::initImplicitGraph(m);
    ob::initInformedRRTstar(m);
    ob::initKPIECE1(m);
    ob::initLBKPIECE1(m);
    ob::initLBTRRT(m);
    ob::initLazyLBTRRT(m);
    ob::initLazyPRM(m);
    ob::initLazyPRMstar(m);
    ob::initLazyRRT(m);
    ob::initLightningRetrieveRepair(m);
    ob::initPDST(m);
    ob::initPRM(m);
    ob::initPRMstar(m);
    ob::initPathGeometric(m);
    ob::initPathHybridization(m);
    ob::initPathSimplifier(m);
    ob::initPlannerIncludes(m);
    ob::initProjEST(m);
    ob::initQueuetypes(m);
    ob::initRLRT(m);
    ob::initRRT(m);
    ob::initRRTConnect(m);
    ob::initRRTXstatic(m);
    ob::initRRTsharp(m);
    ob::initRRTstar(m);
    ob::initRandomGeometricGraph(m);
    ob::initReverseQueue(m);
    ob::initSBL(m);
    ob::initSORRTstar(m);
    ob::initSPARS(m);
    ob::initSPARStwo(m);
    ob::initSST(m);
    ob::initSTRIDE(m);
    ob::initSTRRTstar(m);
    ob::initSearchQueue(m);
    ob::initSimpleSetup(m);
    ob::initState(m);
    ob::initTRRT(m);
    ob::initTSRRT(m);
    ob::initThunderRetrieveRepair(m);
    ob::initVFRRT(m);
    ob::initVertex(m);
    ob::initVertex(m);
    ob::initVertex(m);
    ob::initXXL(m);
    ob::initXXLDecomposition(m);
    ob::initXXLPlanarDecomposition(m);
    ob::initXXLPositionDecomposition(m);
    ob::initpRRT(m);
    ob::initpSBL(m);
}
